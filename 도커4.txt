

상품(Product) 서비스 
export ECR=052937454741.dkr.ecr.eu-central-1.amazonaws.com
git clone https://github.com/event-storming/reqres_products.git
cd reqres_products
mvn package -Dmaven.test.skip=true

docker build -t ${ECR}/products:latest .
aws ecr create-repository --repository-name products --region ap-northeast-2
docker push ${ECR}/products:latest

kubectl create deploy products --image=${ECR}/products:latest
kubectl expose deploy products --type="ClusterIP" --port=8080
cd ..
주문(Order) 서비스 

export ECR=052937454741.dkr.ecr.eu-central-1.amazonaws.com

git clone https://github.com/event-storming/reqres_orders.git 
cd reqres_orders 
export IMAGENAME=admin23-orders 

mvn package -Dmaven.test.skip=true 
docker build -t ${ECR}/${IMAGENAME}:latest .
aws ecr create-repository --repository-name ${IMAGENAME} --region eu-central-1
docker push ${ECR}/${IMAGENAME}:latest
kubectl create deploy ${IMAGENAME} --image=${ECR}/${IMAGENAME}:latest
kubectl expose deploy ${IMAGENAME} --type="ClusterIP" --port=8080

cd ..
배송(Delivery) 서비스
git clone https://github.com/event-storming/reqres_delivery.git
cd reqres_delivery
export IMAGENAME=admin23-delivery

mvn package -Dmaven.test.skip=true 
docker build -t ${ECR}/${IMAGENAME}:latest .
aws ecr create-repository --repository-name ${IMAGENAME} --region eu-central-1
docker push ${ECR}/${IMAGENAME}:latest
kubectl create deploy ${IMAGENAME} --image=${ECR}/${IMAGENAME}:latest
kubectl expose deploy ${IMAGENAME} --type="ClusterIP" --port=8080

cd ..
인증(Oauth) 서비스 
git clone https://github.com/event-storming/oauth.git
cd oauth
export IMAGENAME=admin23-oauth

mvn package -Dmaven.test.skip=true 
docker build -t ${ECR}/${IMAGENAME}:latest .
aws ecr create-repository --repository-name ${IMAGENAME} --region eu-central-1
docker push ${ECR}/${IMAGENAME}:latest
kubectl create deploy ${IMAGENAME} --image=${ECR}/${IMAGENAME}:latest
kubectl expose deploy ${IMAGENAME} --type="ClusterIP" --port=8080

cd ..
게이트웨이(Gateway) 서비스
git clone https://github.com/event-storming/gateway.git
cd gateway
export IMAGENAME=admin23-gateway

mvn package -Dmaven.test.skip=true 
docker build -t ${ECR}/${IMAGENAME}:latest .
aws ecr create-repository --repository-name ${IMAGENAME} --region eu-central-1
docker push ${ECR}/${IMAGENAME}:latest
kubectl create deploy ${IMAGENAME} --image=${ECR}/${IMAGENAME}:latest
kubectl expose deploy ${IMAGENAME} --type="LoadBalancer" --port=8080

cd ..









sudo apt-get update
sudo apt install build-essential
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt install nodejs

프론트-엔드(UI) 서비스: 배포 사전 작업
git clone https://github.com/event-storming/ui.git
cd ui
export IMAGENAME=admin23-ui

npm install
npm run build
docker build -t ${ECR}/${IMAGENAME}:latest .
aws ecr create-repository --repository-name ${IMAGENAME} --region eu-central-1
docker push ${ECR}/${IMAGENAME}:latest

_GATEWAY_IP= a0c52ceebc5a749d4a008d13f90bc63c-696417577.eu-central-1.elb.amazonaws.com

프론트-엔드(UI) 서비스: 배포 및 서비스 생성
cat <<EOF | kubectl apply -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${IMAGENAME}
  labels:
    app: ${IMAGENAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${IMAGENAME}
  template:
    metadata:
      labels:
        app: ${IMAGENAME}
    spec:
      containers:
        - name: ${IMAGENAME}
          image: ${ECR}/${IMAGENAME}:latest
          ports:
            - containerPort: 8080
          env:
            - name: VUE_APP_API_HOST
              value: http://${_GATEWAY_IP}:8080
EOF

kubectl expose deploy ${IMAGENAME} --type="LoadBalancer" --port=8080

cd ..